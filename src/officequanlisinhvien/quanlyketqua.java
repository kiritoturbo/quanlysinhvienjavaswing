/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package officequanlisinhvien;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author MANH TRUONG
 */
public class quanlyketqua extends javax.swing.JPanel {

    DefaultTableModel tblModel;
    DefaultTableModel tblModel1;

    /**
     * Creates new form quanlyketqua
     */
    public quanlyketqua() {
        initComponents();
        initTable();
        loaddulieu();
        loaddulieubangketqua();
        nguoncombobox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboChonLop = new javax.swing.JComboBox<>();
        txtMasv = new javax.swing.JTextField();
        txtHoten = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtHe2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDiemThilai = new javax.swing.JTextField();
        cboMon = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtHe1 = new javax.swing.JTextField();
        txtDiemthi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnXoa = new javax.swing.JButton();
        btnnew = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnxuat = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        bangketqua = new javax.swing.JTable();
        tenb = new javax.swing.JScrollPane();
        bangsinhvien = new javax.swing.JTable();
        hientoanbo = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Bảng kết Quả Học Tập ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Chọn Lớp");

        cboChonLop.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboChonLop.setForeground(new java.awt.Color(51, 51, 255));
        cboChonLop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboChonLop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboChonLopItemStateChanged(evt);
            }
        });

        txtMasv.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMasv.setForeground(new java.awt.Color(51, 51, 255));

        txtHoten.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtHoten.setForeground(new java.awt.Color(51, 51, 255));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 255));
        jLabel8.setText("Mã sv:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setText("Họ tên:");

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        txtHe2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtHe2.setForeground(new java.awt.Color(51, 51, 255));
        txtHe2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHe2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 255));
        jLabel6.setText("Hệ số 2:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 255));
        jLabel7.setText("Điểm thi lại ");

        txtDiemThilai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDiemThilai.setForeground(new java.awt.Color(51, 51, 255));

        cboMon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboMon.setForeground(new java.awt.Color(51, 51, 255));
        cboMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Môn :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Hệ số 1:");

        txtHe1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtHe1.setForeground(new java.awt.Color(51, 51, 255));
        txtHe1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHe1FocusLost(evt);
            }
        });
        txtHe1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHe1ActionPerformed(evt);
            }
        });

        txtDiemthi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDiemthi.setForeground(new java.awt.Color(51, 51, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("Điểm thi :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDiemthi, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(txtHe1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHe2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiemThilai, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cboMon, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHe1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHe2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDiemthi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtDiemThilai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 51, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnnew.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnnew.setForeground(new java.awt.Color(51, 51, 255));
        btnnew.setText("Nhập mới");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(51, 51, 255));
        btnThem.setText("Thêm ");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(51, 51, 255));
        btnSua.setText("Sửa ");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnxuat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnxuat.setForeground(new java.awt.Color(0, 0, 255));
        btnxuat.setText("Xuất Excel");
        btnxuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(btnnew)
                .addGap(92, 92, 92))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnxuat)
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnxuat, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnnew, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jScrollPane2.setBackground(new java.awt.Color(0, 255, 51));

        bangketqua.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        bangketqua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bangketquaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bangketqua);

        jScrollPane3.setViewportView(jScrollPane1);

        bangsinhvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        bangsinhvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bangsinhvienMouseClicked(evt);
            }
        });
        tenb.setViewportView(bangsinhvien);

        hientoanbo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        hientoanbo.setForeground(new java.awt.Color(51, 0, 255));
        hientoanbo.setText("Hiện toàn bộ ");
        hientoanbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hientoanboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cboChonLop, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(hientoanbo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 38, Short.MAX_VALUE)
                                .addComponent(tenb, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(43, 43, 43)
                                .addComponent(txtMasv, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(400, 400, 400)
                                    .addComponent(jLabel1))
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(62, 62, 62)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboChonLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtMasv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hientoanbo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tenb)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        boolean isok = true;
        StringBuilder sb = new StringBuilder();
        if (txtDiemthi.getText().equals("") || txtDiemThilai.getText().equals("") || txtHe1.getText().equals("") || txtHe2.getText().equals("")) {
            sb.append("Không được để trống ");
        }
        try {
            double diemso = Double.parseDouble(txtDiemthi.getText());

            if (diemso <= 0 || diemso >= 10) {
                sb.append("điểm số nằm ngoài khoảng 0-10 \n");
                txtDiemthi.requestFocus();
                txtDiemthi.setBackground(Color.red);
                isok = false;
            }
        } catch (Exception e) {
            sb.append("giá trị điểm số không hợp lệ (phải là giá trị số)\n");
            isok = false;
        }

        try {
            double diemso = Double.parseDouble(txtDiemThilai.getText());

            if (diemso <= 0 || diemso >= 10) {
                sb.append("điểm số nằm ngoài khoảng 0-10 \n");
                txtDiemThilai.requestFocus();
                txtDiemThilai.setBackground(Color.red);
                isok = false;
            }
        } catch (Exception e) {
            sb.append("giá trị điểm số không hợp lệ (phải là giá trị số)\n");
            isok = false;
        }

        try {
            double diemso = Double.parseDouble(txtHe1.getText());

            if (diemso <= 0 || diemso >= 10) {
                sb.append("điểm số nằm ngoài khoảng 0-10 \n");
                txtHe1.setBackground(Color.red);
                txtHe1.requestFocus();
                isok = false;
            }
        } catch (Exception e) {
            sb.append("giá trị điểm số không hợp lệ (phải là giá trị số)\n");
            isok = false;
        }
        try {
            double diemso = Double.parseDouble(txtHe2.getText());

            if (diemso <= 0 || diemso >= 10) {
                sb.append("điểm số nằm ngoài khoảng 0-10 \n");
                txtHe2.requestFocus();
                txtHe2.setBackground(Color.red);
                isok = false;
            }
        } catch (Exception e) {
            sb.append("giá trị điểm số không hợp lệ (phải là giá trị số)\n");
            isok = false;
        }
        if (isok) {
            txtDiemThilai.setBackground(Color.white);
            txtDiemthi.setBackground(Color.white);
            txtHe1.setBackground(Color.white);
            txtHe2.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString());
//             JOptionPane.showMessageDialog(this, sb.toString(),"invalid data",JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";

            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "insert into ketqua(masv,mamon,diemhs1,diemhs2,diemthi,diemthilai) values (?,?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(1, txtMasv.getText());
            ps.setString(2, (String) this.cboMon.getSelectedItem());
            ps.setString(3, txtHe1.getText());
            ps.setString(4, txtHe2.getText());
            ps.setString(5, txtDiemthi.getText());
            ps.setString(6, txtDiemThilai.getText());

            ps.executeUpdate();//để thực hiện câu lệnh insert into và đưa dữ liệu vào trong cơ sở dữ liệu 
            loaddulieubangketqua();
            JOptionPane.showMessageDialog(this, "thêm thành công ");
            ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void bangsinhvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bangsinhvienMouseClicked
        int row = bangsinhvien.getSelectedRow();

        if (row >= 0) {
            txtMasv.setText(bangsinhvien.getValueAt(row, 0).toString());
            txtHoten.setText(bangsinhvien.getValueAt(row, 2).toString());
        }
    }//GEN-LAST:event_bangsinhvienMouseClicked

    private void bangketquaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bangketquaMouseClicked
        int row = bangketqua.getSelectedRow();

        if (row >= 0) {
            txtMasv.setText(bangketqua.getValueAt(row, 0).toString());
            cboMon.setSelectedItem(bangketqua.getValueAt(row, 1).toString());
            txtHe1.setText(bangketqua.getValueAt(row, 2).toString());
            txtHe2.setText(bangketqua.getValueAt(row, 3).toString());
            txtDiemthi.setText(bangketqua.getValueAt(row, 4).toString());
            txtDiemThilai.setText(bangketqua.getValueAt(row, 5).toString());
        }
    }//GEN-LAST:event_bangketquaMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
         if (JOptionPane.showConfirmDialog(this, "bạn có muốn sửa không?") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";

            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "update ketqua set mamon=?,diemhs1=?,diemhs2=?,diemthi=?,diemthilai=? where masv=?";//
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(6, txtMasv.getText());
            ps.setString(1, (String) this.cboMon.getSelectedItem());
            ps.setString(2, txtHe1.getText());
            ps.setString(3, txtHe2.getText());
            ps.setString(4, txtDiemthi.getText());
            ps.setString(5, txtDiemThilai.getText());

            ps.executeUpdate();//để thực hiện câu lệnh insert into và đưa dữ liệu vào trong cơ sở dữ liệu 
            loaddulieubangketqua();
            JOptionPane.showMessageDialog(this, "sửa thành công ");
            ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (JOptionPane.showConfirmDialog(this, "bạn có muốn xóa không?") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";

            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "delete from ketqua where masv=?";//
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(1, txtMasv.getText());

            ps.executeUpdate();//để thực hiện câu lệnh insert into và đưa dữ liệu vào trong cơ sở dữ liệu 
            loaddulieubangketqua();
            JOptionPane.showMessageDialog(this, "xóa thành công ");
            ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtHe2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHe2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHe2ActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        txtDiemThilai.setText("");
        txtDiemthi.setText("");
        txtHe1.setText("");
        txtHe2.setText("");
        txtMasv.setText("");
        txtHoten.setText("");

    }//GEN-LAST:event_btnnewActionPerformed

    private void txtHe1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHe1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHe1ActionPerformed

    private void cboChonLopItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboChonLopItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            try {
                int number;
                Vector row;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
                String username = "sa";
                String password = "123456789";

                Connection con = DriverManager.getConnection(url, username, password);
                String sql = "select * from sinhvien where malop= '" + cboChonLop.getSelectedItem() + "'";
                Statement ps = con.createStatement();
                ResultSet rs = ps.executeQuery(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                number = metadata.getColumnCount();
                tblModel.setRowCount(0);
                while (rs.next()) {
                    row = new Vector();
                    for (int i = 1; i <= number; i++) {
                        row.addElement(rs.getString(i));
                    }
                    tblModel.addRow(row);
                    bangsinhvien.setModel(tblModel);

                }
                ps.close();
                con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cboChonLopItemStateChanged

    private void hientoanboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hientoanboActionPerformed
        loaddulieu();
    }//GEN-LAST:event_hientoanboActionPerformed

    private void btnxuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxuatActionPerformed
        Vector headers = new Vector();
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;//Excel 2007 trở lên
        //hssp: hỗ trợ của Excel 2003
        //.xls
//        .xlsx:2007
        //choose location for saving excel file 
        JFileChooser excelFileChooser = new JFileChooser("C:\\Documents");
        //change dilog box title 
        excelFileChooser.setDialogTitle("save as");
        //onliny filter files with these extensions "xls"
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        //check if save button is clicked
        if (excelChooser == JFileChooser.APPROVE_OPTION) {

            try {
                XSSFWorkbook wf = new XSSFWorkbook();
                XSSFSheet sheet = wf.createSheet("user details");
                Row row;
                int rownum = 0;
                     Row row1;
                headers.clear();
                Cell cell;
                XSSFCellStyle style = createStyleForTitle(wf);
                row = sheet.createRow(rownum);
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("mã sinh viên");
                cell.setCellStyle(style);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("mã môn");
                cell.setCellStyle(style);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("điểm hệ số 1 ");
                cell.setCellStyle(style);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("điểm hệ số 2 ");
                cell.setCellStyle(style);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("điểm thi ");
                cell.setCellStyle(style);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("điểm thi lại");
                cell.setCellStyle(style);
                
//                ResultSetMetaData rsmd =rs.getMetaD 
                row = sheet.createRow(3);
//                int colnum=
//
//                cell = row.createCell(0, CellType.STRING);
//                cell.setCellValue("mã sinh viên ");
                //import excel poi libaries to netbeans
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                //loop to get Jtable columns and rows

                for (int i = 1; i < bangketqua.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    
           
                    for (int j = 1; j < bangketqua.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);
                       

                        excelCell.setCellValue(bangketqua.getValueAt(i, j).toString());
                    }
                }   //append xlsx file extensions to select files .to create unique file names
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                try {
                    excelJTableExporter.write(excelBOU);
                    JOptionPane.showMessageDialog(null, "xuất file thành công");
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnxuatActionPerformed

    private void txtHe1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHe1FocusLost
                  if(this.isVisible()){
        String sdt = txtHe1.getText();
        String reg="^\\d{1}.\\d$";
        if(sdt.length()>0){ 
            if(!sdt.matches(reg)) {//sdt sai định dạng
                JOptionPane.showMessageDialog(this,"sai định dạng ");
                txtHe1.requestFocus();
                txtHe1.setBackground(Color.red);
        }
            else{
                txtHe1.setBackground(Color.white);
            }
        }else{
            JOptionPane.showMessageDialog(this, " không được để trống");
        }
                  }
    }//GEN-LAST:event_txtHe1FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bangketqua;
    private javax.swing.JTable bangsinhvien;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnxuat;
    private javax.swing.JComboBox<String> cboChonLop;
    private javax.swing.JComboBox<String> cboMon;
    private javax.swing.JButton hientoanbo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JScrollPane tenb;
    private javax.swing.JTextField txtDiemThilai;
    private javax.swing.JTextField txtDiemthi;
    private javax.swing.JTextField txtHe1;
    private javax.swing.JTextField txtHe2;
    private javax.swing.JTextField txtHoten;
    private javax.swing.JTextField txtMasv;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã sv", "Mã lớp", "Họ Tên", "Ngày sinh", "Giới tính", "Số điện thoại", "địa chỉ"});//thiết lập tên của của các table
        bangsinhvien.setModel(tblModel);
        tblModel1 = new DefaultTableModel();
        tblModel1.setColumnIdentifiers(new String[]{"Mã sv", "Mã môn", "diểm chuyên cần", "điểm giữa kì", "điểm thi cuối kì ", "điểm thi lại "});//thiết lập tên của của các table
        bangketqua.setModel(tblModel1);
    }

    private void loaddulieu() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";
            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "select*from sinhvien";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();//trả về kết quả ResultSet
            tblModel.setRowCount(0);
            while (rs.next()) {
                String[] row = new String[]{
                    rs.getString("masv"), rs.getString("malop"), rs.getString("hoten"), rs.getString("ngaysinh"), rs.getString("gioitinh"), rs.getString("sdt"), rs.getString("diachi")
                };
                tblModel.addRow(row);
            }
            tblModel.fireTableDataChanged();//cập nhật dữ liệu trong bảng
            rs.close();//đóng kết nối lại 
            ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void nguoncombobox() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String ConnectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";
            Connection con = DriverManager.getConnection(ConnectionUrl, username, password);
            String sql = "select malop from lop ";
            PreparedStatement pstmt = con.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            cboChonLop.removeAllItems();
            while (rs.next()) {
                cboChonLop.addItem(rs.getString("malop"));
            }
            String sql1 = "select mamon from monhoc ";
            PreparedStatement pstmt1 = con.prepareStatement(sql1);
            ResultSet rs1 = pstmt1.executeQuery();
            cboMon.removeAllItems();
            while (rs1.next()) {
                cboMon.addItem(rs1.getString("mamon"));
            }
            rs1.close();
            pstmt1.close();
            rs.close();
            pstmt.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loaddulieubangketqua() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";
            Connection con = DriverManager.getConnection(url, username, password);
            String sql1 = "select*from ketqua";
            PreparedStatement ps1 = con.prepareStatement(sql1);
            ResultSet rs1 = ps1.executeQuery();//trả về kết quả ResultSet
            tblModel1.setRowCount(0);
            while (rs1.next()) {
                String[] row = new String[]{
                    rs1.getString("masv"), rs1.getString("mamon"), rs1.getString("diemhs1"), rs1.getString("diemhs2"), rs1.getString("diemthi"), rs1.getString("diemthilai")
                };
                tblModel1.addRow(row);
            }
            tblModel1.fireTableDataChanged();//cập nhật dữ liệu trong bảng
            rs1.close();
            ps1.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private XSSFCellStyle createStyleForTitle(XSSFWorkbook wf) {
        XSSFFont font = wf.createFont();
        font.setBold(true);
        XSSFCellStyle style = wf.createCellStyle();
        style.setFont(font);
        return style;

    }
}
//try {
//            StringBuilder sd = new StringBuilder();
//            KiemTra(txtMaLP.getText(),txtTenLP.getText() , txtGiaLP.getText(), txtGDon.getText(),txtGDoi.getText(),sd);
//            if(sd.length()>0){
//                JOptionPane.showMessageDialog(btnThem, sd);
//                return;
//            }
//            con = getConnection();
//            String sql="select * from LoaiPhong";
//            pstmt = con.prepareStatement(sql);
//            ResultSet rs = pstmt.executeQuery();

//             int d=0;
//             while(rs.next()){
//               if( rs.getString("MaLP").replaceAll(" ", "").equals(txtMaLP.getText().replaceAll(" ", "")) == true) d++;
//            }
//             if(d!=1){
//                 JOptionPane.showMessageDialog(this, "Mã loại phòng muốn sửa tồn tại");
//             }
//             if(d==1) {
//                 if(JOptionPane.showConfirmDialog(btnSua,"Bạn có muốn sửa thông tin hay không?")==JOptionPane.NO_OPTION) return;
//                 sql ="update LoaiPhong set TenLoaiPhong=?,Gia=?,SoGiuongDon=?,SoGiuongDoi=?"+"  where MaLP=?";
//                 pstmt = con.prepareStatement(sql);
//                 pstmt.setString(5, txtMaLP.getText());
//                 pstmt.setString(1, txtTenLP.getText());
//                 pstmt.setString(2, txtGiaLP.getText());
//                 pstmt.setString(3, txtGDon.getText());
//                 pstmt.setString(4, txtGDoi.getText());
//                 pstmt.executeUpdate();
//                 JOptionPane.showMessageDialog(this, "Sửa thành công");
//                 hienThiDanhSachPhong();
//                 pstmt.close();
//                 con.close();
//             }
//        } catch (Exception e) {
//        }
//    }
