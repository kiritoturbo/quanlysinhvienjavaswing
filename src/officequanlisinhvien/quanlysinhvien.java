/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package officequanlisinhvien;

import com.sun.jmx.defaults.JmxProperties;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Label;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.sql.RowSetReader;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.RootPaneUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MANH TRUONG
 */
public class quanlysinhvien extends javax.swing.JPanel {

    DefaultTableModel tblModel;
    byte[] anh;//lưu hình do người đùng lựa chọn 

    /**
     * Creates new form quanlysinhvien
     */
    public quanlysinhvien() {
        initComponents();
        initTable();
        initComboBox();
        loadAllEmployees();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        BangTT = new javax.swing.JTable();
        nam = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        nu = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnNhapMoi = new javax.swing.JButton();
        txtMaSV = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        txtHoTen = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        txtNgaysinh = new javax.swing.JTextField();
        btnXoa = new javax.swing.JButton();
        txtSDT = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        btnMoHinh = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cbomalop = new javax.swing.JComboBox<>();
        lblThongbao = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        BangTT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BangTT.setForeground(new java.awt.Color(204, 0, 204));
        BangTT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        BangTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BangTTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BangTT);

        buttonGroup1.add(nam);
        nam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nam.setForeground(new java.awt.Color(51, 0, 255));
        nam.setSelected(true);
        nam.setText("Nam");

        buttonGroup1.add(nu);
        nu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nu.setForeground(new java.awt.Color(51, 0, 255));
        nu.setText("Nữ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/10207-man-student-light-skin-tone-icon-32.png"))); // NOI18N
        jLabel9.setText("THÔNG TIN SINH VIÊN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Mã SV");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 255));
        jLabel7.setText("Địa Chỉ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Họ Tên");

        txtDiaChi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Ngày sinh");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("SDT");

        btnNhapMoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNhapMoi.setForeground(new java.awt.Color(51, 51, 255));
        btnNhapMoi.setText("Nhập mới");
        btnNhapMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapMoiActionPerformed(evt);
            }
        });

        txtMaSV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(51, 51, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        txtHoTen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(51, 51, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        txtNgaysinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 51, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSDT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSDTFocusLost(evt);
            }
        });
        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 255));
        jLabel6.setText("Giới Tính");

        lblImage.setBackground(new java.awt.Color(255, 0, 51));
        lblImage.setForeground(new java.awt.Color(51, 51, 255));

        btnMoHinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMoHinh.setForeground(new java.awt.Color(51, 51, 255));
        btnMoHinh.setText("Chọn ảnh ");
        btnMoHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoHinhActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 255));
        jLabel8.setText("Mã Lớp");

        cbomalop.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbomalop.setForeground(new java.awt.Color(51, 51, 255));
        cbomalop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblThongbao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblThongbao.setForeground(new java.awt.Color(51, 51, 255));
        lblThongbao.setText("Tìm kiếm ");

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(51, 51, 255));
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 255));
        jButton1.setText("Hiện toàn bộ ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtHoTen)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(126, 126, 126)
                                                .addComponent(jLabel8)
                                                .addGap(39, 39, 39)
                                                .addComponent(cbomalop, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNgaysinh)
                                            .addComponent(txtSDT)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nam)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nu)
                                        .addGap(173, 173, 173))
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnMoHinh)
                                .addGap(111, 111, 111))))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(lblThongbao)
                                .addGap(32, 32, 32)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(btnNhapMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jButton1)))
                        .addGap(0, 48, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cbomalop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel5)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(nam)
                            .addComponent(nu))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(btnMoHinh))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNhapMoi)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa)
                            .addComponent(jButton1))
                        .addGap(37, 37, 37)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblThongbao)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BangTTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BangTTMouseClicked

        int row = BangTT.getSelectedRow();

        if (row >= 0) {
            txtMaSV.setText(BangTT.getValueAt(row, 0).toString());
            cbomalop.setSelectedItem(BangTT.getValueAt(row, 1).toString());
            txtHoTen.setText(BangTT.getValueAt(row, 2).toString());
            txtNgaysinh.setText(BangTT.getValueAt(row, 3).toString());
//            String a;
//                 if(nam.isSelected()){
//                 a = "Nam";
//                 }else if(nu.isSelected()){
//                 a = "Nữ";
//                 }
            String sex = tblModel.getValueAt(row, 4).toString();
            if (sex.equals("1")) {
                nam.setSelected(true);
            } else {
                nu.setSelected(true);
            }
            txtSDT.setText(BangTT.getValueAt(row, 5).toString());
            txtDiaChi.setText(BangTT.getValueAt(row, 6).toString());
            String masv = BangTT.getValueAt(row, 0).toString();
            try {
                int number;

                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
                String username = "sa";
                String password = "123456789";

                Connection con = DriverManager.getConnection(url, username, password);
                String sql = "select * from sinhvien where masv= '" + masv + "'";
                Statement ps = con.createStatement();
                ResultSet rs = ps.executeQuery(sql);
                if (rs.next()) {

                }
                Blob blob = rs.getBlob("hinh");
                if (blob != null) {
                    anh = blob.getBytes(1, (int) blob.length());
                    Image img = imagehelper.createImageFromByteArray(anh, "jpg");
                    lblImage.setIcon(new ImageIcon(img));
                } else {
                    lblImage.setIcon(new ImageIcon(getClass().getResource("")));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            //The image is stored as ImageIcon in jlabel
            //The image is stored in the fourth column
//        JLabel imageJl = (JLabel) tblModel.getValueAt(row, 7);
//        //Retrieving image icon from jlabel
//        //Store image icon In ImageIcon type Variable
//        ImageIcon imageJLIcon = (ImageIcon) imageJl.getIcon();
//        //Resize image to fit to jlable
//        Image imageJLFit = imageJLIcon.getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
//        //Display selected image on jlabel
//        lblImage.setIcon(new ImageIcon(imageJLFit));
//            Image img=imagehelper.createImageFromByteArray(anh, "jpg");
//        
//           ImageIcon imageJLIcon=(ImageIcon) imageJl.getIcon();
//           Image imageJlFit =imageJLIcon.getImage().getScaledInstance(lblImage.getWidth(),lblImage.getHeight(), Image.SCALE_SMOOTH);
//           lblImage.setIcon(new ImageIcon(imageJlFit));
        }


    }//GEN-LAST:event_BangTTMouseClicked

    private Boolean ktTrungThem(String manhap) {
        try {
            int row = 0;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";

            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "Select * from sinhvien where masv=N'" + manhap + "'";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();//trả về kết quả ResultSet
            tblModel.setRowCount(0);
            while (rs.next()) {
                row++;
            }
            if (row > 0) {
                return true;
            } else {
                return false;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;

    }
    private void btnNhapMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapMoiActionPerformed
        txtDiaChi.setText("");
        txtHoTen.setText("");
        txtMaSV.setText("");
        txtSDT.setText("");
        txtNgaysinh.setText("");
        anh = null;
        ImageIcon icon = new ImageIcon(getClass().getResource("/img/10207-man-student-light-skin-tone-icon-32.png"));
        lblImage.setIcon(icon);

    }//GEN-LAST:event_btnNhapMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        txtMaSV.setEnabled(true);
        if (ktTrungThem(txtMaSV.getText()) == true) {
            JOptionPane.showMessageDialog(this, "trùng mã thêm");
            return;
        }
        StringBuilder sb = new StringBuilder();
        if (txtDiaChi.getText().equals("") || txtHoTen.getText().equals("") || txtMaSV.getText().equals("") || txtNgaysinh.getText().equals("") || txtSDT.getText().equals("")) {
            sb.append("không được để nội dung trống");
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString());
//             JOptionPane.showMessageDialog(this, sb.toString(),"invalid data",JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";

            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "insert into sinhvien values (?,?,?,?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, txtMaSV.getText());
            ps.setString(2, (String) this.cbomalop.getSelectedItem());
            ps.setString(3, txtHoTen.getText());
            ps.setString(4, txtNgaysinh.getText());
            String a = null;
            if (nam.isSelected()) {
                ps.setBoolean(5, true);

                a = "nam";
            } else if (nu.isSelected()) {
                ps.setBoolean(5, false);
                a = "nữ";
            }

            ps.setString(5, a);
            ps.setString(6, txtSDT.getText());
            ps.setString(7, txtDiaChi.getText());
//              
            Blob hinh = new SerialBlob(anh);
            ps.setBlob(8, hinh);
//               ps.setBytes(8, anh);

            ps.executeUpdate();//để thực hiện câu lệnh insert into và đưa dữ liệu vào trong cơ sở dữ liệu 
            loadAllEmployees();
            JOptionPane.showMessageDialog(this, "thêm thành công ");
            ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println(e.toString());
        }

        txtDiaChi.setText("");
        txtHoTen.setText("");
        txtMaSV.setText("");
        txtSDT.setText("");
        txtNgaysinh.setText("");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (JOptionPane.showConfirmDialog(this, "bạn có muốn sửa không?") == JOptionPane.NO_OPTION) {
            return;
        }
        txtMaSV.disable();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";

            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "update sinhvien set malop=?,hoten=?,ngaysinh=?,gioitinh=?,sdt=?,diachi=?,hinh=? where masv=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(8, txtMaSV.getText());
            ps.setString(1, (String) this.cbomalop.getSelectedItem());
            ps.setString(2, txtHoTen.getText());
            ps.setString(3, txtNgaysinh.getText());
            if (nam.isSelected()) {
                ps.setBoolean(4, true);
            } else {
                ps.setBoolean(4, false);
            }
            String a = null;
            if (nam.isSelected()) {
                a = "nam";
            } else if (nu.isSelected()) {
                a = "nữ";
            }
            ps.setString(6, txtDiaChi.getText());
            ps.setString(5, txtSDT.getText());
//               ps.setBytes(7, anh);
            Blob hinh = new SerialBlob(anh);
            ps.setBlob(7, hinh);

            ps.executeUpdate();//để thực hiện câu lệnh insert into và đưa dữ liệu vào trong cơ sở dữ liệu 
            loadAllEmployees();
            JOptionPane.showMessageDialog(this, "Sửa thành công ");
            ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        loadAllEmployees();
        txtDiaChi.setText("");
        txtHoTen.setText("");
        txtMaSV.setText("");
        txtSDT.setText("");
        txtNgaysinh.setText("");
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (JOptionPane.showConfirmDialog(this, "bạn có muốn xóa không?") == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";

            Connection con = DriverManager.getConnection(url, username, password);
            String sql = "delete from sinhvien where masv=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, txtMaSV.getText());

            ps.executeUpdate();//để thực hiện câu lệnh insert into và đưa dữ liệu vào trong cơ sở dữ liệu 
            loadAllEmployees();
            JOptionPane.showMessageDialog(this, "Xóa thành công ");
            ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        loadAllEmployees();
        txtDiaChi.setText("");
        txtHoTen.setText("");
        txtMaSV.setText("");
        txtSDT.setText("");
        txtNgaysinh.setText("");

    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtSDTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSDTFocusLost
        if(this.isVisible()){
        String sdt = txtSDT.getText();
        String reg="^\\d{9}$";
        if(sdt.length()>0){ 
            if(!sdt.matches(reg)) {//sdt sai định dạng
                JOptionPane.showMessageDialog(this,"sai định dạng ,nhập lại đủ 9 số");
                txtSDT.requestFocus();
                txtSDT.setBackground(Color.red);
        }
            else{
                txtSDT.setBackground(Color.white);
            }
        }else{
            JOptionPane.showMessageDialog(this, "sdt không được để trống");
        }
        
    }//GEN-LAST:event_txtSDTFocusLost
    }
    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        if (txtTimKiem.getText().equals("")) {
            loadAllEmployees();
        } else {
            try {
                int number;
                Vector row;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
                String username = "sa";
                String password = "123456789";

                Connection con = DriverManager.getConnection(url, username, password);
                String sql = "select * from sinhvien where masv= '" + txtTimKiem.getText() + "'";
                Statement ps = con.createStatement();
                ResultSet rs = ps.executeQuery(sql);
                ResultSetMetaData metadata = rs.getMetaData();
                number = metadata.getColumnCount();
                tblModel.setRowCount(0);
                while (rs.next()) {
                    row = new Vector();
                    for (int i = 1; i <= number; i++) {
                        row.addElement(rs.getString(i));
                    }
                    tblModel.addRow(row);
                    BangTT.setModel(tblModel);
                }
                ps.close();
                con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnMoHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoHinhActionPerformed
        JFileChooser fileChooser = new JFileChooser();//chọn đường dẫn file ảnh
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Hình ảnh", "png", "jpg");
        fileChooser.setFileFilter(imageFilter);
        fileChooser.setMultiSelectionEnabled(false);
        int x = fileChooser.showDialog(this, "Chọn file");
        if (x == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            String filename = f.getPath();
            ImageIcon icon = new ImageIcon(filename);
            Image img = imagehelper.resize(icon.getImage(), 160, 160);
            ImageIcon iconrz = new ImageIcon(img);
            lblImage.setIcon(iconrz);
            try {
                anh = imagehelper.toByteArray(img, "jpg");
            } catch (IOException ex) {
                System.out.println(ex.toString());
            }
        }
    }//GEN-LAST:event_btnMoHinhActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadAllEmployees();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BangTT;
    private javax.swing.JButton btnMoHinh;
    private javax.swing.JButton btnNhapMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbomalop;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblThongbao;
    private javax.swing.JRadioButton nam;
    private javax.swing.JRadioButton nu;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtNgaysinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"mã sinh viên ", "mã lóp", "họ tên ", "ngày sinh", "giới tính", "số điện thoại", "địa chỉ "});//thiết lập tên của của các table
        BangTT.setModel(tblModel);//thiết lập model cho table
    }

    private void loadAllEmployees() {
        try {
            int number;

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String ConnectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String dbusername = "sa";
            String password = "123456789";
            Connection con = DriverManager.getConnection(ConnectionUrl, dbusername, password);//kết nối vs cơ sở dữ liệu

            String sql = "select * from sinhvien";
            PreparedStatement pstmt = con.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();//trả về kết quả ResultSet
            tblModel.setRowCount(0);
            while (rs.next()) {//dùng vòng lặp để kết quả trong rs sau đó tạo ra cái row và đưa vào Model
                String[] row = new String[]{
                    rs.getString("masv"), rs.getString("malop"), rs.getString("hoten"), rs.getString("ngaysinh"),
                    rs.getString("gioitinh"), rs.getString("sdt"), rs.getString("diachi")
                };
                tblModel.addRow(row);

            }

            tblModel.fireTableDataChanged();//cập nhật dữ liệu trong bảng
            rs.close();//đóng kết nối lại 
            pstmt.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }

    private void initComboBox() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String ConnectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=quanlysinhvien";
            String username = "sa";
            String password = "123456789";
            Connection con = DriverManager.getConnection(ConnectionUrl, username, password);
            String sql = "select malop from sinhvien";
            PreparedStatement pstmt = con.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            cbomalop.removeAllItems();
            while (rs.next()) {
                cbomalop.addItem(rs.getString("malop"));
            }
            rs.close();
            pstmt.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
